@startuml

class ErrorCreatingFileController {
    -Button button

    ~void closePopup(ActionEvent event)
}

class FileNotFoundController {
    -Button button

    ~void closePopup(ActionEvent event)
}

class InvalidInputController {
    -Button button

    ~void closePopup(ActionEvent event)
}

class MoreThan100ObjectsController {
    -Button button

    ~void closePopup(ActionEvent event)
}

class NoPathController {
    -Button button

    ~void closePopup(ActionEvent event)
}

class AddItemController {
    -RadioButton completeButton
    -DatePicker datePicker
    -TextField textPane
    -Button button
    -String dueDate
    -Item newItem
    -Stage stage

    +AddItemController()
    +AddItemController(String s)
    +Item display()
    ~void setDueDate()
    ~void setDueDate(String s)
    ~void saveItem()
    ~{static} boolean isValidInput(String input)
    -void promptInvalidInput()
}

class Item {
    -String description
    -String dueDate
    -String status
    -int id
    -{static} int index

    +Item(String description, String dueDate, String status)
    +String getDescription()
    +void setDescription(String description)
    +String getDueDate()
    +void setDueDate(String dueDate)
    +String getStatus()
    +void setStatus(String s)
    +int getId()
    +{static} void resetIndex()
}

class LoadFileController {
    -Button chooseFileButton
    -Label filePathPane
    -Button importButton
    -Stage stage
    -List<Item> loadedItems

    +LoadFileController()
    +LoadFileController(String s)
    ~void chooseFile(ActionEvent event)
    +List<Item> loadItems()
    ~void loadFile(ActionEvent event)
    -void load(String path)
    ~void forceLoad(String s)
    ~List<Item> getLoadedItems()
    -void failToLoad()
}

class SaveFileController {
    -TextField fileNamePane
    -Button findFileButton
    -Label pathLabel
    -List<Item> savedList
    -Stage stage
    -Button saveButton
    -String LOGO

    +SaveFileController()
    +SaveFileController(String s)
    ~void findFilePath(ActionEvent event)
    +void sendItems(List<Item> inventory)
    ~void loadWindow()
    ~void saveLists(ActionEvent event)
    ~Formatter createOutputStream(String path, String name)
    -void save(String path, String name)
    ~void forceSaveList(List<Item> values, String path, String name)
    -void failToSave()
    -void invalidInput()
    -void invalidPath()
}

class TodoListApplication extends javafx.application.Application {
    +void start(Stage stage)
    +{static} void main(String[] args)
}

class SceneController {
-ImageView titleImage
-RadioButton completeButton
-RadioButton incompleteButton
-{static} String COMPLETE = "Complete"
-{static} String INCOMPLETE = "Incomplete"
-MenuItem deleteAllItems
-MenuItem deleteItem
-TextField descriptionTextField
-DatePicker dueDateDatePicker
-MenuItem menuFileLoadList
-MenuItem menuFileSaveList
-MenuItem menuViewAll
-MenuItem menuViewComplete
-MenuItem menuViewIncomplete
-int view
-Button newItemButton
-ScrollPane itemsScrollPane
~TableView<Item> tableView
-TableColumn<Item, String> viewDescription
-TableColumn<Item, String> viewDueDate
-TableColumn<Item, String> viewStatus
-ObservableList<Item> listOfItems = FXCollections.observableArrayList()
-List<Item> inventory = new ArrayList<>()
-AnchorPane itemsPane
-ToggleGroup statusButton

+void initialize()
~void setTableView()
-void refreshTable()
~ObservableList<Item> getListOfItems()
~List<Item> getInventory()
~int getView()
~void setListOfItemsToAll()
~void setListOfItemsToComplete()
~void setListOfItemsToIncomplete()
~int findIndexOfID(int id)
~void addItemToListIfStatusMatches(Item item)
~void addItemToList(ActionEvent event)
~void setDate(ActionEvent event)
~void modifyDates(int inventoryIndex, int listOfItemsIndex, String newDueDate)
~void setDescription(ActionEvent event)
~void modifyDescriptions(int inventoryIndex, int listOfItemsIndex, String newDescription)
~Boolean isInputInvalid(String s)
~void clickCompleteButton(ActionEvent event)
~void clickIncompleteButton(ActionEvent event)
~void modifyStatus(int inventoryIndex, int listOfItemsIndex, String s)
~void deleteAllItems(ActionEvent event)
~void clearItems()
~void deleteItem(ActionEvent event)
~void loadList(ActionEvent event)
~void insertLoadedList(List<Item> list)
~void saveList(ActionEvent event)
~void viewAllItems(ActionEvent event)
~void viewCompleteItems(ActionEvent event)
~void viewIncompleteItems(ActionEvent event)
-void promptInvalidInput()
}

'-----------------------------------------------------------
AddItemController -- Item
AddItemController -- InvalidInputController
LoadFileController -- FileNotFoundController
LoadFileController -- Item
SaveItemController -- Item
SaveItemController -- ErrorCreatingFileController
SaveItemController -- InvalidInputController
SaveItemController -- NoPathController
javafx.application.Application <|-- TodoListApplication
SceneController -- Item
SceneController -- AddItemController
SceneController -- LoadFileController
SceneController -- SaveFileController
SceneController -- MoreThan100ObjectsController
SceneController -- InvalidInputController

@enduml